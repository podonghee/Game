<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.podong.game.module.gamevideo.dao.GameVideoMapper">

    <select id="getGameVideoList" resultType="java.util.HashMap" statementType="PREPARED">
        SELECT B.GAME_ID AS gameId
               , B.GAME_NAME AS gameName
               , B.IMG_URL AS gameVideoImgUrl
               , B.PLATFORM AS platform
               , B.GENRE AS genre
        FROM   GM_GAME_VIDEO A
        INNER
        JOIN   GM_GAME B
        ON     A.GAME_ID = B.GAME_ID
        WHERE  A.USE_YN = 'Y'
        AND    B.USE_YN = 'Y'
        AND    A.GAME_PARENT_VIDEO_ID IS NULL
        <if test='null != platform and "" != platform  '>
            AND B.PLATFORM = #{platform, jdbcType=VARCHAR}
        </if>
        GROUP
        BY     B.GAME_ID
        <if test='null != page'>
            LIMIT 	#{page.pageBegin, jdbcType=NUMERIC}
            , #{page.pageScale, jdbcType=NUMERIC}
        </if>
    </select>
    <select id="getGameVideoCnt" resultType="int" statementType="PREPARED">
        SELECT COUNT(A.GAME_ID)
        FROM (
                SELECT B.GAME_ID
                FROM   GM_GAME_VIDEO A
                INNER
                JOIN   GM_GAME B
                ON     A.GAME_ID = B.GAME_ID
                WHERE  A.USE_YN = 'Y'
                AND    B.USE_YN = 'Y'
                AND    A.GAME_PARENT_VIDEO_ID IS NULL
                <if test='null != platform and "" != platform  '>
                     AND B.PLATFORM = #{platform, jdbcType=VARCHAR}
                </if>
                GROUP BY B.GAME_ID
             ) A
    </select>
    <select id="getDetailVideoList" resultType="java.util.HashMap" statementType="PREPARED">
        SELECT  A.GAME_ID AS gameId
                , A.GAME_VIDEO_IMG_URL AS gameVideoImgUrl
                , A.DESCRIPTION AS description
                , A.GAME_VIDEO_ID AS gameVideoId
        FROM    GM_GAME_VIDEO A
        WHERE   A.USE_YN = 'Y'
        AND     A.GAME_ID = #{gameId, jdbcType=VARCHAR}
        AND     A.GAME_PARENT_VIDEO_ID IS NULL
        <if test='null != page'>
            LIMIT 	#{page.pageBegin, jdbcType=NUMERIC}
            , #{page.pageScale, jdbcType=NUMERIC}
        </if>
    </select>
    <select id="getDetailVideoCnt" resultType="int" statementType="PREPARED">
        SELECT  COUNT(*)
        FROM    GM_GAME_VIDEO A
        WHERE   A.USE_YN = 'Y'
        AND     A.GAME_ID = #{gameId, jdbcType=VARCHAR}
        AND     A.GAME_PARENT_VIDEO_ID IS NULL
    </select>
    <select id="getDetailToList" resultType="java.util.HashMap" statementType="PREPARED">
        WITH RECURSIVE CTE as (
            SELECT 1 AS LEVEL
                   , GAME_VIDEO_ID
                   , GAME_PARENT_VIDEO_ID
                   , GAME_ID
                   , GAME_VIDEO_IMG_URL
                   , DESCRIPTION
            FROM   GM_GAME_VIDEO
            WHERE  GAME_PARENT_VIDEO_ID IS NULL
            AND    USE_YN= 'Y'
            AND    GAME_ID = #{gameId, jdbcType=VARCHAR}
            UNION ALL
            SELECT 1 + LEVEL AS LEVEL
                   , A.GAME_VIDEO_ID
                   , A.GAME_PARENT_VIDEO_ID
                   , A.GAME_ID
                   , A.GAME_VIDEO_IMG_URL
                   , A.DESCRIPTION
            FROM   GM_GAME_VIDEO A
            INNER
            JOIN   CTE B
            ON     A.GAME_PARENT_VIDEO_ID = B.GAME_VIDEO_ID
            WHERE  A.USE_YN= 'Y'
            AND  A.GAME_ID = #{gameId, jdbcType=VARCHAR}
        )
        SELECT LEVEL AS levelNo
               , GAME_VIDEO_ID AS gameVideoId
               , GAME_PARENT_VIDEO_ID AS gameParentVideoId
               , GAME_ID  AS gameId
               , GAME_VIDEO_IMG_URL AS gameVideoImgUrl
               , DESCRIPTION  AS description
        FROM CTE
    </select>
</mapper>